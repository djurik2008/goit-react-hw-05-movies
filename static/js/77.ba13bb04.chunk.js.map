{"version":3,"file":"static/js/77.ba13bb04.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Movies/MoviesList/moviesList.module.css?2017","components/Movies/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage/homePage.module.css?d1eb","pages/HomePage/HomePage.jsx","service/apiFilms.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"moviesList_moviesList__amZlo\",\"movieListItem\":\"moviesList_movieListItem__-4tg0\",\"movieLink\":\"moviesList_movieLink__o+Bfs\",\"rating\":\"moviesList_rating__bOb-a\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './moviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title, vote_average }) => (\n    <li key={id} className={css.movieListItem}>\n      <Link\n        className={css.movieLink}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n      <p className={css.rating}>Rating: {vote_average}</p>\n    </li>\n  ));\n  return <ul className={css.moviesList}>{elements}</ul>;\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"homePage_moviesContainer__Vqnt9\",\"error\":\"homePage_error__C9RCE\",\"heading\":\"homePage_heading__nufl-\"};","import css from './homePage.module.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getTrendingMovies } from 'service/apiFilms';\nimport MoviesList from 'components/Movies/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { results },\n        } = await getTrendingMovies();\n        setFilms(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div className={css.moviesContainer}>\n      {error && <p className={css.error}>{error}</p>}\n      {loading && <Loader />}\n      {films && (\n        <>\n          <h1 className={css.heading}>Trending today:</h1>\n          <MoviesList items={films} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c2cb27046eece6b474a585335d7daf3b';\n\nexport const getTrendingMovies = () =>\n  axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n\nexport const getSearchMovie = query =>\n  axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`);\n\nexport const getMovieById = movieId =>\n  axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n\nexport const getMovieCast = movieId =>\n  axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n\nexport const getMovieReviews = movieId =>\n  axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n"],"names":["_ref","items","location","useLocation","elements","map","_ref2","id","title","vote_average","_jsxs","className","css","children","_jsx","Link","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","films","setFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","data","t0","message","finish","stop","apply","arguments","Loader","_Fragment","MoviesList","BASE_URL","API_KEY","axios","getSearchMovie","query","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}